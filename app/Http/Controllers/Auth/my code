public function update(Request $request)
    {
        
        $request->validate([
            'question_name' => 'required',
            'age_group_id' => 'required',
        ]);

        try {
            $question = Question::find($request->id);

            if ($question) {
                $question->question_name = $request->question_name;
                $question->is_available = $request->is_available;
                $question->option_view_type = $request->option_view_type;
                $question->is_for_pregnant = $request->is_for_pregnant;
                $question->age_group_id = $request->age_group_id;

                if ($request->hasFile('image')) {
                    $file = $request->file('image');
                    $image_url = $this->addSingleImage('question', $file, $old_image = '');
                    $question->image = $image_url;
                } elseif (!$request->hasFile('image') && !$request->input('remove_image')) {
                    // If the image input field is blank and remove_image is not set, retain the existing image
                    $question->image = $question->image;
                } else {
                    // If there was no existing image and no new image uploaded, set the image attribute to null
                    $question->image = null;
                }

                $question->save(); // Save the changes to the database

              
                $optionData = Question_option::where('question_id', $request->id)->get();
                $existingOptionIds = [];
                
                if ($request->has('option_name') || $request->hasFile('icon')) {
                    $optionNames = $request->option_name;
                    $icons = $request->file('icon');
                
                    foreach ($optionNames as $index => $optionName) {
                        // Find existing Question_option or create a new one
                        $questionOption = $optionData->get($index) ?? new Question_option;
                
                        if (isset($icons[$index]) && $icons[$index]->isValid()) {
                            $icon = $icons[$index];
                            $iconName = $icon->getClientOriginalName();
                            $icon->move(public_path('images/uploads/question_option'), $iconName);
                            $questionOption->icon = $iconName;
                        }
                
                        // Update other attributes
                        $questionOption->question_id = $request->id;
                        $questionOption->option_name = $optionName;
                        $questionOption->save();
                
                        // Store the ID of the existing record
                        if ($questionOption->exists) {
                            $existingOptionIds[] = $questionOption->id;       
                        }
                    }
                }
                
                // Delete records whose IDs are not in the $existingOptionIds array
                Question_option::where('question_id', $request->id)
                    ->whereNotIn('id', $existingOptionIds)
                    ->delete();
                
                
                
            }
            return redirect()->route('question.index')->with('message', 'Data_Saved_Successfully');
        } catch (\Throwable $th) {
           
            return redirect()->route('question.index')->with('error', 'Internal_server_error');
        }
    }